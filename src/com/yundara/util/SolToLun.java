/*
 * 생성일 : 2004. 12. 28.
 *
 * 사용방법 : 
 */

package com.yundara.util;

import java.util.Calendar;
import java.util.Hashtable;

/**
 * @author 오영석
 *
 * TODO 클래스에 대한 설명
 */
public class SolToLun {
	private final int[][] matchTable = { 
			// 1881
			{ 1, 2, 1, 2, 1, 2, 2, 3, 2, 2, 1, 2, 1 }, 
			{ 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 0 }, 
			{ 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 0 }, 
			{ 2, 1, 1, 2, 1, 3, 2, 1, 2, 2, 1, 2, 2 }, 
			{ 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 0 }, 
			{ 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 0 }, 
			{ 2, 2, 1, 2, 3, 2, 1, 1, 2, 1, 2, 1, 2 }, 
			{ 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 0 }, 
			{ 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 3, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2 }, 
			// 1891
			{ 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 0 }, 
			{ 1, 1, 2, 1, 1, 2, 3, 2, 2, 1, 2, 2, 2 }, 
			{ 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 0 }, 
			{ 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 0 }, 
			{ 2, 1, 2, 1, 2, 3, 1, 2, 1, 2, 1, 2, 1 }, 
			{ 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 0 }, 
			{ 2, 1, 2, 3, 2, 2, 1, 2, 1, 2, 1, 2, 1 }, 
			{ 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 1, 1, 2, 1, 2, 2, 3, 2, 2, 1, 2 }, 
			// 1901
			{ 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 0 }, 
			{ 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 0 }, 
			{ 1, 2, 1, 2, 1, 3, 2, 1, 1, 2, 2, 1, 2 }, 
			{ 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 0 }, 
			{ 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 2, 1, 4, 1, 2, 1, 2, 1, 2, 1, 2 }, 
			{ 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 0 }, 
			{ 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 0 }, 
			{ 1, 2, 3, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2 }, 
			{ 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 0 }, 
			// 1911
			{ 2, 1, 2, 1, 1, 2, 3, 1, 2, 2, 1, 2, 2 }, 
			{ 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 0 }, 
			{ 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 0 }, 
			{ 2, 2, 1, 2, 2, 3, 1, 2, 1, 2, 1, 1, 2 }, 
			{ 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 0 }, 
			{ 2, 1, 3, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1 }, 
			{ 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 0 }, 
			{ 1, 2, 1, 1, 2, 1, 2, 3, 2, 2, 1, 2, 2 }, 
			{ 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 0 }, 
			// 1921
			{ 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 0 }, 
			{ 2, 1, 2, 2, 1, 3, 2, 1, 1, 2, 1, 2, 2 }, 
			{ 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 0 }, 
			{ 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 0 }, 
			{ 2, 1, 2, 2, 3, 2, 1, 2, 2, 1, 2, 1, 2 }, 
			{ 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 0 }, 
			{ 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 0 }, 
			{ 1, 2, 3, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2 }, 
			{ 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 0 }, 
			{ 1, 2, 2, 1, 1, 2, 3, 1, 2, 1, 2, 2, 1 }, 
			// 1931
			{ 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 0 }, 
			{ 2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 2, 1, 2, 4, 1, 2, 1, 2, 1, 1, 2 }, 
			{ 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 0 }, 
			{ 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 0 }, 
			{ 2, 1, 1, 4, 1, 2, 1, 2, 1, 2, 2, 2, 1 }, 
			{ 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 0 }, 
			{ 2, 2, 1, 1, 2, 1, 1, 4, 1, 2, 2, 1, 2 }, 
			{ 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 0 }, 
			{ 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 0 }, 
			// 1941
			{ 2, 2, 1, 2, 2, 1, 4, 1, 1, 2, 1, 2, 1 }, 
			{ 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 0 }, 
			{ 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 0 }, 
			{ 1, 1, 2, 1, 4, 1, 2, 1, 2, 2, 1, 2, 2 }, 
			{ 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 0 }, 
			{ 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 0 }, 
			{ 2, 2, 3, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2 }, 
			{ 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 0 }, 
			{ 2, 2, 1, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2 }, 
			{ 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 0 }, 
			// 1951
			{ 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 1, 2, 1, 4, 2, 1, 2, 1, 2, 1, 2 }, 
			{ 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 0 }, 
			{ 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 0 }, 
			{ 2, 1, 1, 4, 1, 1, 2, 1, 2, 1, 2, 2, 2 }, 
			{ 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 0 }, 
			{ 2, 1, 2, 1, 2, 1, 1, 2, 3, 2, 1, 2, 2 }, 
			{ 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 0 }, 
			{ 2, 1, 2, 1, 2, 2, 3, 2, 1, 2, 1, 2, 1 }, 
			// 1961
			{ 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 0 }, 
			{ 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 2, 2, 1 }, 
			{ 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 0 }, 
			{ 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 0 }, 
			{ 2, 2, 2, 3, 2, 1, 1, 2, 1, 1, 2, 2, 1 }, 
			{ 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 2, 1, 2, 1, 2, 3, 2, 1, 2, 1, 2 }, 
			{ 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 0 }, 
			{ 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 0 }, 
			// 1971
			{ 1, 2, 1, 1, 2, 3, 2, 1, 2, 2, 2, 1, 2 }, 
			{ 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 0 }, 
			{ 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 0 }, 
			{ 2, 2, 1, 2, 3, 1, 2, 1, 1, 2, 2, 1, 2 }, 
			{ 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 0 }, 
			{ 2, 2, 1, 2, 1, 2, 1, 2, 3, 2, 1, 1, 2 }, 
			{ 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 1, 0 }, 
			{ 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 0 }, 
			{ 2, 1, 1, 2, 1, 2, 4, 1, 2, 2, 1, 2, 1 }, 
			{ 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 0 }, 
			// 1981
			{ 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 0 }, 
			{ 2, 1, 2, 1, 3, 2, 1, 1, 2, 2, 1, 2, 2 }, 
			{ 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 0 }, 
			{ 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 3, 2, 2 }, 
			{ 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 0 }, 
			{ 2, 1, 2, 2, 1, 2, 3, 2, 2, 1, 2, 1, 2 }, 
			{ 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 0 }, 
			{ 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 0 }, 
			{ 1, 2, 1, 1, 2, 3, 1, 2, 1, 2, 2, 2, 2 }, 
			// 1991
			{ 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 0 }, 
			{ 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 0 }, 
			{ 1, 2, 2, 3, 2, 1, 2, 1, 1, 2, 1, 2, 1 }, 
			{ 2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 2, 1, 2, 2, 1, 2, 3, 2, 1, 1, 2 }, 
			{ 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 0 }, 
			{ 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 0 }, 
			{ 2, 1, 1, 2, 1, 3, 2, 2, 1, 2, 2, 2, 1 }, 
			{ 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 0 }, 
			{ 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 0 }, 
			// 2001
			{ 2, 2, 2, 1, 3, 2, 1, 1, 2, 1, 2, 1, 2 }, 
			{ 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 0 }, 
			{ 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 3, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2 }, 
			{ 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 0 }, 
			{ 1, 1, 2, 1, 2, 1, 2, 3, 2, 2, 1, 2, 2 }, 
			{ 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 0 }, 
			{ 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 0 }, 
			{ 2, 2, 1, 1, 2, 3, 1, 2, 1, 2, 1, 2, 2 }, 
			{ 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 0 }, 
			// 2011
			{ 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 0 }, 
			{ 2, 1, 2, 4, 2, 1, 2, 1, 1, 2, 1, 2, 1 }, 
			{ 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 1, 2, 1, 2, 1, 2, 2, 3, 2, 1, 2 }, 
			{ 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 0 }, 
			{ 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 0 }, 
			{ 2, 1, 1, 2, 1, 3, 2, 1, 2, 1, 2, 2, 2 }, 
			{ 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 0 }, 
			{ 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 0 }, 
			{ 2, 1, 2, 2, 3, 2, 1, 1, 2, 1, 2, 1, 2 }, 
			// 2021
			{ 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 0 }, 
			{ 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 0 }, 
			{ 1, 2, 3, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2 }, 
			{ 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 0 }, 
			{ 2, 1, 2, 1, 1, 2, 3, 2, 1, 2, 2, 2, 1 }, 
			{ 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 0 }, 
			{ 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 0 }, 
			{ 1, 2, 2, 1, 2, 3, 1, 2, 1, 1, 2, 2, 1 }, 
			{ 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 0 }, 
			{ 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 0 }, 
			// 2031
			{ 2, 1, 2, 3, 2, 1, 2, 2, 1, 2, 1, 2, 1 }, 
			{ 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 0 }, 
			{ 1, 2, 1, 1, 2, 1, 2, 3, 2, 2, 2, 1, 2 }, 
			{ 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 0 }, 
			{ 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 0 }, 
			{ 2, 2, 1, 2, 1, 1, 4, 1, 1, 2, 1, 2, 2 }, 
			{ 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 0 }, 
			{ 2, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 0 }, 
			{ 2, 2, 1, 2, 2, 3, 2, 1, 2, 1, 2, 1, 1 }, 
			{ 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 0 }, 
			// 2041
			{ 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 0 }, 
			{ 1, 2, 3, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2 }, 
			{ 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 0 }};

	private int lunarMonthDay[] = {31, 0, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

	// 입력받은 양력의 년.월.일
	private int year, month, date;
	// 음력의 년,월,일
	private int lunarYear, lunarMonth, lunarDate;
	// 음력의 윤달여부
	private boolean leap;
	
	private final String lunarYuk[] = {"갑", "을", "병", "정", "무", "기", "경", "신", "임", "계"};
	private final String lunarGap[] = {"자", "축", "인", "묘", "진", "사", "오", "미", "신", "유", "술", "해"};
	private final String lunarDdi[] = {"쥐띠", "소띠", "범띠", "토끼띠", "용띠", "뱀띠", "말띠", "양띠", "잔나비띠", "닭띠", "개띠", "돼지띠"};
	private final String lunarWeekDay[] = {"일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"};

	public SolToLun(String year, String month, String date){
		this.year = Integer.parseInt(year);
		this.month = Integer.parseInt(month);
		this.date = Integer.parseInt(date);
		convert();
	}
	public SolToLun(int year, int month, int date){
		this.year = year;
		this.month = month;
		this.date = date;
		convert();
	}
	public SolToLun(){
		Calendar cal = Calendar.getInstance();
		this.year = cal.get(Calendar.YEAR);
		this.month = cal.get(Calendar.MONTH)-1;
		this.date = cal.get(Calendar.DAY_OF_MONTH);	
		convert();
	}



	private void convert(){
		int[] dt = new int[163];
		int td1, td2,  k11, td, td0, t1, t2, jcount, m2, m1, m0, w, ti1, tj1;
		for(int i=0; i<matchTable.length; i++){
			dt[i] = 0;
			for(int j=0; j<12; j++){
				if( matchTable[i][j]%2 == 1 ){
					dt[i] +=29;
				}else{
					dt[i] +=30;
				}
			}
			if( matchTable[i][12] == 0 ){
				dt[i] += 0;
			}else if( (matchTable[i][12] % 2) == 1 ){
				dt[i] += 29;
			}else{
				dt[i] += 30;
			}
		}

		td1 = 1880*365 + (int)((double)1880/(double)4) - (int)((double)1880/(double)100) + (int)((double)1880/(double)400) + 30;
		k11 = year - 1;
		td2 = k11*365 + (int)((double)k11/(double)4) - (int)((double)k11/(double)100) + (int)((double)k11/(double)400);

		if( (year%400 == 0) || (year%100 != 0) & (year%4 == 0) ){
			lunarMonthDay[1] = 29;	
		}else{
			lunarMonthDay[1] = 28;	
		}

		for(int i=0; i<month-1 ; i++){
			td2 += lunarMonthDay[i];
		}
		td2 += date;
		td = td2 - td1 + 1;
		td0 = dt[0];
		t1 = 0;
		for( t1=0 ; t1<163 ; t1++){
			if( td <= td0 ){
				break;	
			}
			td0 += dt[t1+1];
		}
	
		lunarYear = t1 + 1881;
		td0 -= dt[t1];
		td -= td0;
		
		jcount = 12;
		if( matchTable[t1][12] !=0 ){
			jcount = 13;
		}
		
		m2 = 0;
		t2 = 0;
		for( t2 =0; t2 < jcount ; t2++) {
			if( matchTable[t1][t2] <=2 ){
				m2++;
				m1 = matchTable[t1][t2] + 28;
			}else{
				m1 = matchTable[t1][t2] + 26;
			}
			if( td<=m1 ){
				break;
			}	
			td -= m1;
		}
		m0 = t2;
		lunarMonth = m2;
		lunarDate = td;
		w = td2%7;

		t1 = (int)( (td2 +4) % 10 );
		t2 = (int)( (td2 +2) % 12 );
		ti1 = (lunarYear + 6) % 10;
		tj1 = (lunarYear + 8) % 12;
		if( matchTable[lunarYear-1881][12] >2  & matchTable[lunarYear-1881][m0] >2 ){
			leap = true;
		}
		
	}
	public int getYear(){
		return lunarYear;
	}
	public int getMonth(){
		return lunarMonth;
	}
	public int getDate(){
		return lunarDate;
	}
	public boolean isLeap(){
		return leap;
	}

/*
	public static void main(String[] args){
		StringTokenizer st = new StringTokenizer(args[0],"-");
		SolToLun lc = new SolToLun( st.nextToken(), st.nextToken(), st.nextToken() );
		System.out.println( lc.getYear());
		System.out.println( lc.getMonth());
		System.out.println( lc.getDate());
	}
*/




	public static Hashtable convert(int year, int month, int day){

		  SolToLun stl = new SolToLun( year, month, day );

		  Hashtable SunDate = new Hashtable();
		  SunDate.put( new String("year") , new Integer(stl.getYear()));
		  SunDate.put( new String("month") , new Integer(stl.getMonth()));
		  SunDate.put( new String("day") , new Integer(stl.getDate()));

		  return SunDate;

	}


	public static String convert(String sol_date){

		  String SunDate = sol_date;
		  String divStr = "-";

		  if(SunDate.indexOf("/") != -1) {
			divStr = "/";
		  }

		  String[] arrStr = new String[3];
		  arrStr = SunDate.split(divStr);

		  SolToLun stl = new SolToLun( Integer.parseInt(arrStr[0]), Integer.parseInt(arrStr[1]), Integer.parseInt(arrStr[2]) );
		  SunDate = String.valueOf(stl.getYear()) + divStr + TextUtil.zeroFill(2, stl.getMonth()) + divStr + TextUtil.zeroFill(2, stl.getDate());

		  return SunDate;
	}
}
